#  Required Variables set by external Pipeline Configuration
#
#  buildConfiguration:             Build Configuration Type, for example 'Release'
#  Build.ArtifactStagingDirectory: Directory to stage artifact assembly.
#  nugetConnection:                Nuget Publishing Service Connection Name.
#  mirrorRestUrl:                  Address of the target network's Mirror Node REST API
#  mirrorGrpcUrl:                  Address of the target network's Mirror Node GRPC Endpoint
#  payerPrivateKey:                Private Key of test account making requests of the network, DER encoded in Hex

jobs:
  - job: primary
    timeoutInMinutes: 0
    steps:
    - task: DotNetCoreInstaller@0
      displayName: 'Ensure .Net Core 8.0'
      inputs:
        version: '8.0.0'

    - task: DotNetCoreCLI@2
      displayName: Restore Dependencies  
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build Projects  
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Run Automated Tests  
      inputs:
        command: test
        projects: 'test/**/*.csproj'
        nobuild: true
        arguments: '--configuration $(buildConfiguration) --no-build --verbosity detailed'
        publishTestResults: true
      env:
        'mirrorRestUrl': $(mirrorRestUrl)
        'mirrorGrpcUrl': $(mirrorGrpcUrl)
        'payerPrivateKey': $(payerPrivateKey)

    - task: DotNetCoreCLI@2
      displayName: Create NuGet Packages  
      inputs:
        command: pack
        projects: src/**/*.csproj
        nobuild: true
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1  
      displayName: Save Package Artifacts  
      inputs:
        artifactName: packages
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'

    - task: NuGetCommand@2
      displayName: Publish NugGet Packages  
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), not(eq('n/a',coalesce(variables['nugetConnection'],'n/a'))))
      inputs:
        command: push
        nuGetFeedType: external
        publishFeedCredentials: $(nugetConnection)
