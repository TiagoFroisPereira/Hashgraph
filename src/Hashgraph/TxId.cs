using Hashgraph.Implementation;
using System;

namespace Hashgraph
{
    /// <summary>
    /// Represents the transaction id associated with a network request.  
    /// This is generated by the library automatically for each request.  
    /// <code>TxId</code> implements the equitable interface and can be 
    /// compared to other transaction ids returned from the library.
    /// </summary>
    public sealed record TxId
    {
        /// <summary>
        /// The address of the account paying the
        /// transaction processing fee.
        /// </summary>
        public Address Address { get; internal init; }
        /// <summary>
        /// The number of whole seconds since the Epoch.
        /// </summary>
        public long ValidStartSeconds { get; internal init; }
        /// <summary>
        /// The number of nanoseconds added to the 
        /// <see cref="ValidStartSeconds"/> value to 
        /// produce the total amount of time since the
        /// Epoch.
        /// </summary>
        /// <remarks>
        /// Unfortunately the native .net DateTime class
        /// does not represent time at the resolution of
        /// nano-seconds.  Therefore it is necessary to
        /// represent the date time in this manner.
        /// </remarks>
        public int ValidStartNanos { get; internal init; }
        /// <summary>
        /// Public constructor.
        /// </summary>
        /// <param name="address">
        /// Address associated with 
        /// and paying for this transaction.
        /// </param>
        /// <param name="seconds">
        /// The total number of seconds elapsed since
        /// the Epoch.
        /// </param>
        /// <param name="nanos">
        /// Total number of nanoseconds elapsed past the
        /// seconds past the Epoch.
        /// </param>
        public TxId(Address address, long seconds, int nanos)
        {
            Address = address;
            ValidStartSeconds = seconds;
            ValidStartNanos = nanos;
        }
        /// <summary>
        /// Convenience constructor converting the
        /// entered <code>DateTime</code> object into
        /// the proper seconds and nanoseconds since the
        /// Epoch for use by the network.
        /// </summary>
        /// <param name="address">
        /// Address associated with 
        /// and paying for this transaction.
        /// </param>
        /// <param name="dateTime">
        /// The Date & Time stamp associated with the
        /// transaction.
        /// </param>
        public TxId(Address address, DateTime dateTime)
        {
            Address = address;
            (ValidStartSeconds, ValidStartNanos) = Epoch.FromDate(dateTime);
        }
        /// <summary>
        /// Internal Constructor, for now limit creation
        /// of the uninitialized TxId to the library itself.
        /// </summary>
        internal TxId()
        {
            // Because we don't want to set
            // this property to nullable
            Address = new Address(0, 0, 0);
        }
    }
}
