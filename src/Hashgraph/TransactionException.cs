using System;

namespace Hashgraph
{
    /// <summary>
    /// Represents an error with a transaction that passed the gateway node 
    /// pre-check and was processed by the network but did not succeed.
    /// </summary>
    public sealed class TransactionException : Exception
    {
        /// <summary>
        /// The <see cref="ResponseCode"/> returned by the network.
        /// prior to transaction request expiration.
        /// </summary>
        public ResponseCode Status { get; private set; }
        /// <summary>
        /// The Transaction ID generated by the library (or client code) 
        /// identifying the request.
        /// </summary>
        public TxId TxId { get; private set; }
        /// <summary>
        /// Public Constructor.
        /// </summary>
        /// <param name="message">
        /// The message generated by the library describing the 
        /// condition that raised the exception.
        /// </param>
        /// <param name="transaction">
        /// The Transaction ID of the request that failed.
        /// </param>
        /// <param name="code">
        /// The final <see cref="ResponseCode"/> returned by the network 
        /// prior to transaction request expiration.
        /// </param>
        public TransactionException(string message, TxId transaction, ResponseCode code) : base(message)
        {
            Status = code;
            TxId = transaction;
        }
    }
}
