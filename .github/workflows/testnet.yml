#  Required secrets managed by GitHub.
#
#  MIRROR_REST_URL:      REST API Endpoint for the target network's Mirror node (ie https://previewnet.mirrornode.hedera.com)
#  MIRROR_GRPC_URL:      GRPC Endpoint for the target network's Mirror node (ie http://hcs.previewnet.mirrornode.hedera.com:5600)
#  PAYER_PRIVATE_KEY:    Private Key for the root payer account, DER encoded in Hex

name: 'TESTNET Build & Test'

on:
  push:
    branches: [ main ]

env:
  BUILD_CONFIGURATION: Release
  DOTNET_NOLOGO: true

concurrency: TESTNET

jobs:
  build_and_test_windows:
    name: 'Build and Test Windows'
    environment: TESTNET    
    runs-on: windows-latest
    timeout-minutes: 360
    strategy:
      fail-fast: false

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build
      run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }}

    - name: Integration Tests
      run: dotnet test --logger trx --results-directory test-results --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal
      env:
        'mirrorRestUrl': ${{ vars.MIRROR_REST_URL }}
        'mirrorGrpcUrl': ${{ vars.MIRROR_GRPC_URL }}
        'payerPrivateKey': ${{ secrets.PAYER_PRIVATE_KEY }}

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: test-results-windows
        path: test-results
      if: always()

  build_and_test_linux:
    name: 'Build and Test Linux'
    needs: build_and_test_windows
    environment: TESTNET    
    runs-on: ubuntu-latest
    timeout-minutes: 360
    if: always()
    strategy:
      fail-fast: false

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build
      run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }}

    - name: Integration Tests
      run: dotnet test --logger trx --results-directory test-results --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal
      env:
        'mirrorRestUrl': ${{ vars.MIRROR_REST_URL }}
        'mirrorGrpcUrl': ${{ vars.MIRROR_GRPC_URL }}
        'payerPrivateKey': ${{ secrets.PAYER_PRIVATE_KEY }}

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: test-results-linux
        path: test-results
      if: always()

  build_and_test_macos:
    name: 'Build and Test MacOS'
    needs: build_and_test_linux
    environment: TESTNET    
    runs-on: macos-latest
    timeout-minutes: 360
    if: always()
    strategy:
      fail-fast: false

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build
      run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }}

    - name: Integration Tests
      run: dotnet test --logger trx --results-directory test-results --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal
      env:
        'mirrorRestUrl': ${{ vars.MIRROR_REST_URL }}
        'mirrorGrpcUrl': ${{ vars.MIRROR_GRPC_URL }}
        'payerPrivateKey': ${{ secrets.PAYER_PRIVATE_KEY }}

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: test-results-macos
        path: test-results
      if: always()